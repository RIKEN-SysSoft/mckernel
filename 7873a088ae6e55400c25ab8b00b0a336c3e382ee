{
  "comments": [
    {
      "key": {
        "uuid": "bfe1bbdc_1bc0fffa",
        "filename": "Readme.md",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1014954
      },
      "writtenOn": "2019-02-11T11:26:18Z",
      "side": 1,
      "message": "WARNING: \u0027followings\u0027 may be misspelled - perhaps \u0027following\u0027?\n+IHK/McKernel is a light-weight multi-kernel operating system designed for high-end supercomputing. It runs Linux and McKernel, a light-weight kernel (LWK), side-by-side inside compute nodes and aims at the followings:",
      "revId": "7873a088ae6e55400c25ab8b00b0a336c3e382ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f1378a7_52d5525e",
        "filename": "Readme.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1014954
      },
      "writtenOn": "2019-02-11T11:26:18Z",
      "side": 1,
      "message": "ERROR: trailing whitespace\n+An overview of some of the principal functionalities of the IHK/McKernel stack is provided below. $",
      "revId": "7873a088ae6e55400c25ab8b00b0a336c3e382ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2924124a_f8cab8d1",
        "filename": "Readme.md",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1014954
      },
      "writtenOn": "2019-02-11T11:26:18Z",
      "side": 1,
      "message": "ERROR: trailing whitespace\n+System call forwarding in McKernel is implemented as follows. When an offloaded system call occurs, McKernel marshals the system call number along with its arguments and sends a message to Linux via a dedicated IKC channel. The corresponding proxy process running on Linux is by default waiting for system call requests through an ioctl() call into IHK’s system call delegator kernel module. The delegator kernel module’s IKC interrupt handler wakes up the proxy process, which returns to userspace and simply invokes the requested system call. Once it obtains the return value, it instructs the delegator module to send the result back to McKernel, which subsequently passes the value to user-space. $",
      "revId": "7873a088ae6e55400c25ab8b00b0a336c3e382ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60aa62cd_2c326cbc",
        "filename": "Readme.md",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1014954
      },
      "writtenOn": "2019-02-11T11:26:18Z",
      "side": 1,
      "message": "ERROR: trailing whitespace\n+The unified address space model in IHK/McKernel ensures that offloaded system calls can seamlessly resolve arguments even in case of pointers. This mechanism is depicted below and is implemented as follows. $",
      "revId": "7873a088ae6e55400c25ab8b00b0a336c3e382ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3518f788_cde81690",
        "filename": "Readme.md",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1014954
      },
      "writtenOn": "2019-02-11T11:26:18Z",
      "side": 1,
      "message": "ERROR: trailing whitespace\n+First, the proxy process is compiled as a position independent binary, which enables us to map the code and data segments specific to the proxy process to an address range which is explicitly excluded from McKernel’s user space. The grey box on the right side of the figure demonstrates the excluded region. Second, the entire valid virtual address range of McKernel’s application user-space is covered by a special mapping in the proxy process for which we use a pseudo file mapping in Linux. This mapping is indicated by the blue box on the left side of the figure. $",
      "revId": "7873a088ae6e55400c25ab8b00b0a336c3e382ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15ae6b6b_05fd4cad",
        "filename": "Readme.md",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1014954
      },
      "writtenOn": "2019-02-11T11:26:18Z",
      "side": 1,
      "message": "ERROR: trailing whitespace\n+The McKernel project was started at The University of Tokyo and currently it is mainly developed at RIKEN. $",
      "revId": "7873a088ae6e55400c25ab8b00b0a336c3e382ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}